# -*- coding: utf-8 -*-
"""SUV_Final .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KXrO1hYCVg_2p3NHNCfv4S2D2oU1GSot
"""

import pandas as pd
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.linear_model import LinearRegression

data=pd.read_csv('suv_data.csv')

data.head()

sns.countplot(x='Gender', hue='Purchased', data=data)

sns.boxplot(x='Purchased', y='EstimatedSalary', data=data)

lr=LabelEncoder()
data['Gender']=lr.fit_transform(data['Gender'])

x=data.drop(['Purchased'], axis=1).values
y=data['Purchased'].values

x

y

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30, random_state=42)

"""## Logistic Regression"""

lr=LogisticRegression()
lr.fit(x_train,y_train)

y_pred=lr.predict(x_test)
y_pred

from sklearn.metrics import confusion_matrix
confusion_matrix(y_test,y_pred)

from sklearn.metrics import accuracy_score

score =accuracy_score(y_test,y_pred)

score*100

"""## Linear Regression"""

lr1=LinearRegression()
lr1.fit(x_train,y_train)

y_pred1=lr1.predict(x_test)
y_pred1[0:5]

accuracy = lr1.score(x_test,y_test)
print(accuracy*100,'%')



"""## Random Forest"""

from sklearn.ensemble import RandomForestClassifier

model= RandomForestClassifier(n_estimators=1000)
model.fit(x_train, y_train)

y_pred2= model.predict(x_test)

y_pred2[0:5]

y_test[0:5]

accuracy = model.score(x_test,y_test)
accuracy*100

"""## Naive Bayes"""

from sklearn.naive_bayes import GaussianNB 
gnb = GaussianNB() 
gnb.fit(x_train, y_train)

y_pred3 = gnb.predict(x_test)

y_pred3[0:5]

y_test

from sklearn import metrics 
print("Gaussian Naive Bayes model accuracy(in %):", metrics.accuracy_score(y_test, y_pred)*100)